---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<MOVIEDB_API_KEY>&query=The%20Matrix
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 23 Mar 2023 21:57:48 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=28800
      X-Memc:
      - HIT
      X-Memc-Key:
      - f251a78d142582f39053fe7b40cc1c61
      X-Memc-Age:
      - '19807'
      X-Memc-Expires:
      - '1793'
      Etag:
      - W/"4a3a5acdc59e929fbdafe124c47b7d35"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 422414d66021e4e123bcb2b5087f7042.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN52-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - A0m2fwM5qfOIIK0MfAjy9mBJvILwMli2sBvi4IJLKdYuRJoseGHMqQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 23 Mar 2023 21:57:48 GMT
recorded_with: VCR 6.1.0
